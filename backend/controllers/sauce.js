// Import of schema of data
const Sauce = require('../models/Sauce');
// Import of file system package
const fs = require('fs');

// // Export of 'create', 'getOne', 'modify', 'delete', 'getAll', 'createLike', 'createDislike'
exports.createSauce = (req, res, next) => {
    const sauceObject = JSON.parse(req.body.sauce); //modification of format of the request for change into object
    delete sauceObject._id; //delete the id sent by the front-end
    const sauce = new Sauce({ //create a new instance of the model Sauce
        ...sauceObject, //collect the informations "name, descriptions, ..." with spread
        // collect the URL of the image generated by Multer
        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`
    });

    sauce.save() //save the sauce in the database
    //creation of Promise
    .then(() => res.status(201).json({ 
        message: 'Sauce has been saved !'
    })) // the response of success code 201
    .catch(error =>  res.status(400).json({ 
        error
     })); // the response of error code 400

}

// Export of picking up one prticular sauce 
exports.getOneSauce = (req, res, next) => {
    Sauce.findOne({ // definition with Params of the same id as the sauce requested
        _id: req.params.id 
    }) //creation of Promise
        .then((sauce) => {
            res.status(200).json(sauce) //ã€€the response of success code 200
        })
        .catch((error) => { 
            res.status(404).json({
            error // the response of error code 404, sauce not found
        })
    })
};


// Export of modifying one sauce
exports.modifySauce = (req, res, next) => {
    // creation of a new object if threre's the image to moodify
    const sauceObject = req.file ? {
        // collect the infos of objects
        ...JSON.parse(req.body.sauce),
        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`
        } : { 
            // if not, stay with the original image
            ...req.body 
        };

        // modification of the sauce with updateone
        Sauce.updateOne({
        // selection of the object by the id    
        _id: req.params.id
        }, {
        // insertion of the new object with spread
        ...sauceObject,
        _id: req.params.id
        })
        //creation of Promise
        .then (() => res.status(200).json({
             // the response of success code 200
             message: 'Sauce has been modified !'
            }))
        .catch(error => res.status(400).json({
            // the response of error code 400
            error
            }));
}

// Export of deleting sauce
exports.deleteSauce = (req, res, next) => {
    Sauce.findOne({ 
        _id: req.params.id //collect the object to delete with 'fineOne' and id
        }) 
        .then(sauce => {  //creation of Promise
            // collect file 
            const filename = sauce.imageUrl.split('/images/')[1]; 
            // delete the file with unlink
            fs.unlink(`images/${filename}`, () => {  
                Sauce.deleteOne({ 
                    _id: req.params.id 
                })
                .then(() => res.status(200).json({ 
                    // response of success code 200
                 message: 'Sauce has been deleted !'
                }))
                .catch(error => res.status(401).json({
                    // response of error code 401
                 error 
                }));
            });
        })
        .catch(error => res.status(500).json({
            // response of error code 500 
            error 
        }));
};


// Export of collect all sauces
exports.getAllSauces = (req, res, next) => {
    Sauce.find() // collect the list of all sauces with 'find'
        // creation of Promise
        .then(sauces => {
            // response of success code 200
            res.status(200).json(sauces)
        })
        .catch(error => {
            res.status(400).json({
            // response of error code 400
             error 
            })
        });
}

// Export of liking or disliking a sauce
exports.createLike = (req, res) => {
    Sauce.fineOne({
        // collect the sauce with the id
        _id: req.params.id
    })
    .then(sauce => {
        // the user doesn't like the sauce
        if (req.body.like === -1) {
            sauce.dislikes++; // add the dislike
            sauce.usersDisliked.push(req.body.userId); // add the user to the list of users who disliked
            sauce.save(); // save the sauce
        }
        // the user likes the sauce
        if (req.body.like === 1) {
            sauce.likes++; // add the like
            sauce.usersLiked.push(req.body.userId); // add the user to the list of users who liked
            sauce.save(); // save the sauce
        }

        // the user cancels his like or dislike
        if (req.body.like === 0) {
            // add the condition of deleting Like to be assigned to the id
            if (sauce.usersLiked.indexOf(req.body.userId) !== -1) {
                sauce.likes--; // cancel the like
                sauce.usersLiked.splice(sauce.usersLiked.indexOf(req.body.userId), 1); // remove the Like of the id selectionned
            }else{
            // conditions for dislike
                sauce.dislikes--; // cancel the dislike
                sauce.usersDisliked.splice(sauce.usersDisliked.indexOf(req.body.userId), 1); // remove the dislike of the id selectionned
            }
            sauce.save(); // save the sauce
        }
        // response of success code 200
        res.status(200).json({ message: 'Like has been saved !' });
    })
    .catch(error => {
    // response of error code 500
    res.status(500).json({ error })
});

}


